faction = Faction.where(name: 'Tau empire').first_or_create(name: 'Tau empire')

unit = Unit.where(name: "Chrisis Shas'vre").first_or_create(faction_id: faction.id, name: "Chrisis Shas'vre", weapon_skill: 2, balistics_skill: 3, strength: 5, toughness: 4, 
                                                            wounds: 2, initiative: 2, attacks: 3, leadership: 9, armor_save: 3, unit_type: "Jet	Pack Infantry (Character)", 
                                                            price: 32,  options: "<ul> <li>May	take up to three items from the Ranged Weapons and/or Support Systems list.</li><li>May take up to two drones from the Drones list</li><li>May take wargear from the Tau Empire armoury including Battlesuit and Leader only items.</li></ul>")
armoury = Armoury.where(name: 'Hard-wired Light	Shield', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Hard-wired Light Shield', description: "Grants a	5+ invulnerable	save.", price: 15)
armoury = Armoury.where(name: 'Portable	Repulsor Field', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Portable Repulsor Field', description: "At the start of the Fight sub-phase, at the Initiative 10 step, the bearer inflicts a Strength 4 AP – hit on every model that completed a charge against him.", price: 5)
armoury = Armoury.where(name: 'Command Node', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Command Node', description: "A sophisticated communications system. Increases a Leader’s Inspiring Presence radius from 6” to 12”.", price: 10)
armoury = Armoury.where(name: 'Extended Drone Controller', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Extended Drone Controller', description: "Any friendly Gun Drones and Marker Drones	within 12” of the Team Leader may use his BS instead of their own.", price: 10)
armoury = Armoury.where(name: 'Multi-targeting	Array', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Multi-targeting	Array', description: "This is an AI-assisted sensor array that scans for hostiles and automatically aligns weapon arms. The model can shoot each of its weapons at a different target.", price: 10)
armoury = Armoury.where(name: 'Stabilised Jet', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Stabilised	Jet', description: "The model may roll 3D6 and choose two of the dice for the distance rolled for its additional move in the Assault phase.", price: 10)
armoury = Armoury.where(name: 'Low	Weight Composite', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Low	Weight Composite', description: "The model is immune to Strikedown.", price: 5)
armoury = Armoury.where(name: 'Coolant Injectors', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Coolant Injectors', description: "The model automatically passes Initiative tests caused by 'Flaming' weapons", price: 5)
armoury = Armoury.where(name: 'Bonding Knife Ritual', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Bonding Knife Ritual', description: 'A model with the Bonding Knife Ritual may re-roll failed Pinning tests that are caused by a friendly model being killed within 3".', price: 1)
armoury = Armoury.where(name: 'XV8-02 Crisis ‘Iridium’ Battlesuit', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'XV8-02 Crisis ‘Iridium’ Battlesuit', description: "A model with an XV8-02 Crisis ‘Iridium’ Battlesuit has +1 Toughness and an armour save of 2+. They otherwise follow all of the rules for XV8 Crisis battlesuits.", price: 25)

weapon_option = WeaponOption.where(name: "Flamer", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Flamer", range: 0, strength: 4, armor_penetration: 5, weapon_type: "Asault 1", price: 5)
weapon_option = WeaponOption.where(name: "Burst cannon", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Burst cannon", range: 18, strength: 5, armor_penetration: 5, weapon_type: "Asault 4", price: 10)
weapon_option = WeaponOption.where(name: "Fusion blaster", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Fusion blaster", range: 18, strength: 8, armor_penetration: 1, weapon_type: "Asault 1 Melta", price: 15)
weapon_option = WeaponOption.where(name: "Misile pod", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Misile pod", range: 36, strength: 7, armor_penetration: 4, weapon_type: "Asault 2", price: 15)

special_rule = SpecialRule.where(name: 'Inspiring Presence', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Inspiring Presence', description: 'Friendly models within 6” of this model may use its Leadership for all Leadership tests, even those which would normally require Insane Heroism')
special_rule = SpecialRule.where(name: 'Supporting Fire', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Supporting Fire', description: 'When an enemy unit declares a charge, all friendly models with this special rule in units within 6" of the charging unit’s target can choose to fire Overwatch as if they were also targets of the charge. Note that a unit can still only fire Overwatch once each phase.')
special_rule = SpecialRule.where(name: 'Very Bulky', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Very Bulky', description: 'Very Bulky models instead count as three models.')


unit = Unit.where(name: "Stealth Shas'vre").first_or_create(faction_id: faction.id, name: "Stealth Shas'vre", weapon_skill: 2, balistics_skill: 3, strength: 4, toughness: 3, wounds: 2, initiative: 2, attacks: 3, leadership: 9, armor_save: 3, unit_type: "Jet Pack Infantry (Character)", price: 40,  options: "<ul><li>May take up to two drones from the Drones list<li><li>May take one item from the Support Systems list</li><li>May take wargear from the Tau Empire armoury including Battlesuit and Leader only items.</li></ul>")

armoury = Armoury.where(name: 'Hard-wired Light	Shield', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Hard-wired Light Shield', description: "Grants a	5+ invulnerable	save.", price: 15)
armoury = Armoury.where(name: 'Portable	Repulsor Field', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Portable Repulsor Field', description: "At the start of the Fight sub-phase, at the Initiative 10 step, the bearer inflicts a Strength 4 AP – hit on every model that completed a charge against him.", price: 5)
armoury = Armoury.where(name: 'Command Node', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Command Node', description: "A sophisticated communications system. Increases a Leader’s Inspiring Presence radius from 6” to 12”.", price: 10)
armoury = Armoury.where(name: 'Extended Drone Controller', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Extended Drone Controller', description: "Any friendly Gun Drones and Marker Drones	within 12” of the Team Leader may use his BS instead of their own.", price: 10)
armoury = Armoury.where(name: 'Stabilised Jet', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Stabilised	Jet', description: "The model may roll 3D6 and choose two of the dice for the distance rolled for its additional move in the Assault phase.", price: 10)
armoury = Armoury.where(name: 'Low	Weight Composite', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Low	Weight Composite', description: "The model is immune to Strikedown.", price: 5)
armoury = Armoury.where(name: 'Coolant Injectors', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Coolant Injectors', description: "The model automatically passes Initiative tests caused by 'Flaming' weapons", price: 5)
armoury = Armoury.where(name: 'Bonding Knife Ritual', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Bonding Knife Ritual', description: 'A model with the Bonding Knife Ritual may re-roll failed Pinning tests that are caused by a friendly model being killed within 3".', price: 1)
armoury = Armoury.where(name: 'Markerlight', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Markerlight', description: 'Whenever a Tau model declares it’s using one or more of the markerlight abilities, all friendly Tau models within 6" of the shooter may benefit from the same abilities against the same target during this shooting phase.', price: 5)

weapon_option = WeaponOption.where(name: "Burst cannon", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Burst cannon", range: 18, strength: 5, armor_penetration: 5, weapon_type: "Asault 4", price: 0)
weapon_option = WeaponOption.where(name: "Fusion blaster", unit_id: unit.id).first_or_create(unit_id: unit.id, name: "Fusion blaster", range: 18, strength: 8, armor_penetration: 1, weapon_type: "Asault 1 Melta", price: 15)

special_rule = SpecialRule.where(name: 'Inspiring Presence', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Inspiring Presence', description: 'Friendly models within 6” of this model may use its Leadership for all Leadership tests, even those which would normally require Insane Heroism')
special_rule = SpecialRule.where(name: 'Supporting Fire', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Supporting Fire', description: 'When an enemy unit declares a charge, all friendly models with this special rule in units within 6" of the charging unit’s target can choose to fire Overwatch as if they were also targets of the charge. Note that a unit can still only fire Overwatch once each phase.')
special_rule = SpecialRule.where(name: 'Infiltrate', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Infiltrate', description: 'You may choose to deploy units that contain at least one model with this special rule last, after all other units (friend and foe) have been deployed. If both players have such units and choose to do so, the players roll-off and the winner decides who goes first, then alternate deploying these units. Units that Infiltrate in this way can be set up anywhere on the table that is more than 12" from any enemy unit, as long as no deployed enemy unit can draw line of sight to them. This includes in a building, as long as the building is more than 12" from any enemy unit. Alternatively, they can be set up anywhere on the table more than 18" from any enemy unit, even in plain sight.')
special_rule = SpecialRule.where(name: 'Stealth', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Stealth', description: 'A unit that contains at least one model with this special rule counts its cover saves as being 1 point better than normal. Note that this means that a model with the Stealth special rule always has a cover save of at least 6+, even if it is in the open. This rule is often presented as Stealth (X) where X indicates a specific type of terrain, such as Stealth (Woods) or Stealth (Ruins). If this is the case, the unit only gains the benefit whilst it is in terrain of the specified type. Cover save bonuses from the Shrouded and Stealth special rules are cumulative (to a maximum of a 2+ cover save).')
special_rule = SpecialRule.where(name: 'Shrouded', unit_id: unit.id).first_or_create(unit_id: unit.id, name: 'Shrouded', description: 'A unit that contains at least one model with this special rule counts its cover save as being 2 points better than normal. Note that this means a model with the Shrouded special rule always has a cover save of at least 5+, even if it’s in the open. Cover save bonuses from the Shrouded and Stealth special rules are cumulative (to a maximum of a 2+ cover save)')